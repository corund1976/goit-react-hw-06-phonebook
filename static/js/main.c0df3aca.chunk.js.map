{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","section","ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","Filter","filterValue","handleFilter","Contact","onDeleteContact","contactItem","contact","onClick","ContactList","deleteContact","filteredContacts","contactList","map","id","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","uuidv4","normalizedName","toLowerCase","some","alert","prevState","normalizedFilter","trim","includes","showFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0df3aca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1D6W4\",\"label\":\"ContactForm_label__2oVdQ\",\"input\":\"ContactForm_input__3iH5Y\",\"btn\":\"ContactForm_btn__3hXnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"Contact_contactItem__2VW35\",\"contact\":\"Contact_contact__bPICa\",\"btn\":\"Contact_btn__1kiaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1edGJ\",\"input\":\"Filter_input__HvTE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__197Sm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3M62L\",\"title\":\"Section_title__32U2w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1Y122\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ addContact }) {\r\n  const [name,setName] = useState('');\r\n  const [number,setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addContact({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n              value={name}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n              value={number}\r\n              onChange={handleChange}\r\n              className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n}\r\n// Проблема обновления состояния - всегда должно быть новое после рендера,  \r\n// а не мутировать по ссылке старое.\r\n// Проверка на имутабеольность (равны ли эти значения между рендерами) ->\r\n// componentDidUpdate(prevProps, prevState) {\r\n//   console.log(prevState.name === this.state.name);\r\n// }","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ filterValue, handleFilter }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterValue}\r\n        onChange={handleFilter}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterValue: PropTypes.string.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nfunction Contact({ onDeleteContact, name, number }) { \r\n  return (\r\n    <li className={s.contactItem}>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ deleteContact, filteredContacts }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContacts.map(({ id, name, number }) => {\r\n        return (\r\n          <Contact\r\n            key={id}\r\n            onDeleteContact={() => deleteContact(id)}\r\n            id={id}\r\n            name={name}\r\n            number={number}>\r\n          </Contact>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default ContactList;","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nfunction App() {\n  // ленивая инициализация состояния = lazy state initialization\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  //===== Добавление нового контакта =====\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    // Проверка на повторный ввод существующего контакта\n    const normalizedName = name.toLowerCase();\n    contacts.some(contact => contact.name.toLowerCase() === normalizedName)\n      ?\n        alert(`${name} is already in contacts.`)\n      : \n        setContacts(prevState => [contact, ...prevState]);\n  }\n\n  //===== Удаление контакта =====\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n  // ===== Запись значения Фильтра из инпута =====\n  const handleFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  // ===== Фильтр =====\n  const showFilteredContacts = () => {\n    const normalizedFilter = filter.trim().toLowerCase();\n\n    return (contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter) ||\n      contact.number.includes(filter.trim())\n    ));\n  };\n\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm\n          addContact={addContact} />\n      </Section>\n      \n      <Section>\n        <h2>Contacts</h2>\n        <Filter\n          filterValue={filter}\n          handleFilter={handleFilter} />\n        <ContactList\n          filteredContacts={showFilteredContacts()}\n          deleteContact={deleteContact} />\n      </Section>\n    </Container>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}